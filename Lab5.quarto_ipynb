{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Lab 5\"\n",
        "webr:  \n",
        "  show-startup-message: true    # Display status of webR initialization\n",
        "  packages: ['data.table', 'tidyverse', 'ggplot2', 'speedglm'] # Pre-install dependency\n",
        "editor_options: \n",
        "  chunk_output_type: console\n",
        "---\n",
        "\n",
        "Lab 5 covers \n",
        "\n",
        "* **Propensity score analysis** \n",
        "\n",
        "```{webr}\n",
        "library(tidyverse)\n",
        "diabetes <- read.csv('https://raw.githubusercontent.com/AkiShiroshita/EPID813-2025--Lab/refs/heads/main/data/diabetes.csv')\n",
        "\n",
        "diabetes_clean <- diabetes %>%\n",
        "  # Ensure correct variable types\n",
        "  mutate_if(is.integer, as.numeric) %>%\n",
        "  # Create exposure and outcome variables\n",
        "  mutate(\n",
        "    diab = factor(if_else(glyhb >= 6.5, 1, 0), labels = c(\"No Diabetes\", \"Diabetes\")),\n",
        "    htn = factor(if_else(bp.1s > 130, 1, 0), labels = c(\"No HTN\", \"HTN\"))\n",
        "  ) %>%\n",
        "  # Select variables for analysis\n",
        "  select(htn, diab, age, height, weight, frame, hdl) %>%\n",
        "  # Remove rows with any missing data\n",
        "  drop_na()\n",
        "```\n",
        "\n",
        "* Very simplified workflow\n",
        "\n",
        "1. Estimate the propensity score\n",
        "\n",
        "```{webr}\n",
        "# Model the propensity score\n",
        "ps_model <- glm(diab ~ age + height + weight + hdl,\n",
        "                data = diabetes_clean, family = binomial)\n",
        "\n",
        "# Add the propensity score to our dataframe\n",
        "diabetes_ps <- diabetes_clean %>%\n",
        "  mutate(ps_score = predict(ps_model, type = \"response\"))\n",
        "```\n",
        "\n",
        "2. Use the propensity score: weighting, matching, stratification, etc.\n",
        "\n",
        "```{webr}\n",
        "diabetes_ps <- diabetes_ps %>%\n",
        "  mutate(ipw = if_else(diab == \"Diabetes\", 1/ps_score, 1/(1 - ps_score)))\n",
        "```\n",
        "\n",
        "3. Balance check\n",
        "\n",
        "```{webr}\n",
        "treat_b0_w <- subset(diabetes_ps,diab==\"No Diabetes\")\n",
        "treat_b1_w <- subset(diabetes_ps,diab==\"Diabetes\")\n",
        "\n",
        "weighted_smd_func <- function(x) {\n",
        "  # Isolate the variable and weights for each group\n",
        "  var_t0 <- treat_b0_w[[x]]\n",
        "  weights_t0 <- treat_b0_w$ipw\n",
        "  \n",
        "  var_t1 <- treat_b1_w[[x]]\n",
        "  weights_t1 <- treat_b1_w$ipw\n",
        "  \n",
        "  # Calculate the weighted mean for each group\n",
        "  mean_t0_w <- weighted.mean(var_t0, weights_t0)\n",
        "  mean_t1_w <- weighted.mean(var_t1, weights_t1)\n",
        "  \n",
        "  # Use the standard deviation of the original, unweighted treatment group\n",
        "  sd_t1_unweighted <- sd(treat_b1_w[[x]])\n",
        "  \n",
        "  # Calculate the weighted SMD\n",
        "  smd <- (mean_t1_w - mean_t0_w) / sd_t1_unweighted\n",
        "  \n",
        "  return(c(var = x, smd = smd))\n",
        "}\n",
        "\n",
        "varlist <- c(\"age\", \"height\", \"weight\", \"hdl\")\n",
        "\n",
        "cov_plot_vars <- lapply(varlist, weighted_smd_func) %>% do.call(rbind,.) %>% as_tibble() \n",
        "cov_plot_vars$smd <- as.numeric(cov_plot_vars$smd)\n",
        "\n",
        "# Balance check\n",
        "ggplot(data = cov_plot_vars) + \n",
        "  geom_point(aes(x = smd, y = var), color = \"blue\") + \n",
        "  geom_vline(xintercept = 0) +\n",
        "  geom_vline(xintercept = c(-0.25, 0.25), linetype = \"dashed\", color = \"red\") +\n",
        "  xlim(-1, 1) +\n",
        "  labs(y = \"Covariates\", x = \"Standardized mean difference\") \n",
        "```\n",
        "\n",
        "\n",
        "4. Run the outcome analysis\n",
        "\n",
        "```{webr}\n",
        "# Outcome analysis\n",
        "fit <- glm(htn ~ diab, data = diabetes_ps, weights = ipw, family = binomial())\n",
        "summary(fit)\n",
        "```\n",
        "\n",
        "We will elaborate on this workflow in Lab 5.\n",
        "\n",
        ":::callout-note\n",
        "Consider uncertainty of propensity score estimation!\n",
        ":::"
      ],
      "id": "ef5bed48"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\shiroa1\\AppData\\Local\\Programs\\Python\\Python313\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}